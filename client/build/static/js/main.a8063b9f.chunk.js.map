{"version":3,"sources":["logo.svg","Chat.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Chat","_ref","reid","_ref$nickname","nickname","_useState","useState","_useState2","Object","slicedToArray","conversations","setConversations","_useState3","_useState4","setWs","useEffect","axios","get","concat","then","res","data","console","log","_ws","WebSocket","onopen","event","send","onmessage","_ref2","react_default","a","createElement","style","position","height","es","map","conv","i","key","model","message","sender","direction","senderReid","Header","attachButton","onSend","_ref3","post","headers","Content-Type","sendMessage","toConsumableArray","sentTime","Date","getTime","toString","catch","placeholder","App","location","useLocation","setReid","setNickname","URLSearchParams","search","className","reportWebVitals","onPerfEntry","Function","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","react_router_dom_dist","src_App"],"mappings":"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","file":"static/js/main.a8063b9f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.06e73328.svg\";","import styles from \"@chatscope/chat-ui-kit-styles/dist/default/styles.min.css\";\nimport {\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  Message,\n  MessageInput,\n} from \"@chatscope/chat-ui-kit-react\";\nimport React, {useEffect, useState} from \"react\";\nimport axios from \"axios\";\n\nexport default function Chat({reid, nickname='Ioana'}) \n{ \n\n    const [conversations, setConversations] = useState([])\n    const [ws, setWs] = useState({})\n\n    useEffect(() => {\n        if (reid)\n        {\n            axios.get(`/api/chat/${reid}`).then((res) => setConversations(res.data))\n            console.log('here')\n            let _ws = new WebSocket(\"ws://localhost:8080\")\n            _ws.onopen = (event) => {\n                _ws.send(reid);\n                };\n            \n            _ws.onmessage = function ({data}) {\n                axios.get(`/api/chat/${reid}`).then((res) => setConversations(res.data))\n            };\n            setWs(_ws)\n        }\n\n    }, [reid])\n\n\n    const sendMessage = ({reid, message}) => {\n        return axios.post(`/api/chat/${reid}`, {message}, { headers: {'Content-Type': 'application/json'} })\n    }\n    return (\n    <div style={{ position: \"relative\", height: \"500px\" }}>\n        <MainContainer>\n            <ChatContainer>\n            <MessageList>\n            {conversations.map((conv, i) =>\n            <Message\n                key={i}\n                model={{\n                    message: conv.message,\n                    sender: conv.sender,\n                    direction: conv.senderReid == reid ? 'outgoing' : null,\n                }}\n            >\n                <Message.Header sender={conv.sender}></Message.Header>\n            {conv.senderReid === reid ? (<Message.Header sender={conv.sender}></Message.Header>) : null}\n            </Message>\n            )}\n      </MessageList>\n      <MessageInput attachButton={false} onSend={(message) => sendMessage({message, reid}).then(setConversations([...conversations, {\n          message,\n          sentTime: new Date().getTime().toString(),\n          sender: nickname,\n          senderReid: reid\n      }])).catch()} placeholder=\"Type message here\" />\n    </ChatContainer>\n  </MainContainer>\n</div>); \n}","import logo from './logo.svg';\nimport './App.css';\nimport Chat from './Chat';\nimport React, { useEffect, useState } from 'react';\n\nimport {useLocation, BrowserRouter as Router, useParams} from 'react-router-dom';\nimport axios from 'axios';\nfunction App() {\n  const location = useLocation();\n  const [reid, setReid] = useState(); \n  const [nickname, setNickname] = useState();\n  useEffect(() => {\n    setReid(new URLSearchParams(location.search.toString()).get('reid'))\n    reid && axios.get(`/api/nickname/${reid}`).then((res) => setNickname(res.data)).catch()\n  }, [])\n  return (\n    <div className=\"App\">\n      <Chat reid={reid} nickname={nickname}></Chat>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}